<button
	id="theme-toggle"
	data-tooltip-target="tooltip-toggle"
	type="button"
	class="text-gray-500 dark:text-gray-400 hover:bg-gray-100 dark:hover:bg-gray-700 focus:outline-none focus:ring-4 focus:ring-gray-200 dark:focus:ring-gray-700 rounded-lg text-sm p-2.5"
>
	<svg
		id="theme-toggle-dark-icon"
		class="hidden w-5 h-5"
		fill="currentColor"
		viewBox="0 0 20 20"
		xmlns="http://www.w3.org/2000/svg"
		><path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"
		></path></svg
	>
	<svg
		id="theme-toggle-light-icon"
		class="hidden w-5 h-5"
		fill="currentColor"
		viewBox="0 0 20 20"
		xmlns="http://www.w3.org/2000/svg"
		><path
			d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z"
			fill-rule="evenodd"
			clip-rule="evenodd"></path></svg
	>
</button>
<div
	id="tooltip-toggle"
	role="tooltip"
	class="absolute z-10 invisible inline-block px-3 py-2 text-sm font-medium text-white transition-opacity duration-300 bg-gray-900 rounded-lg shadow-sm opacity-0 tooltip"
>
	黑夜/白天 模式
	<div class="tooltip-arrow" data-popper-arrow></div>
</div>

<script>
	// 确保DOM完全加载后再执行脚本
	document.addEventListener('DOMContentLoaded', () => {
		// 获取主题切换相关元素
		const themeToggleDarkIcon = document.getElementById('theme-toggle-dark-icon');
		const themeToggleLightIcon = document.getElementById('theme-toggle-light-icon');
		const themeToggleBtn = document.getElementById('theme-toggle');
		const tooltip = document.getElementById('tooltip-toggle');

		// 检查元素是否存在
		if (!themeToggleDarkIcon || !themeToggleLightIcon || !themeToggleBtn) {
			console.error('主题切换元素未找到');
			return;
		}

		// 根据之前的设置更改按钮内的图标
		if (
			localStorage.getItem('color-theme') === 'dark' ||
			(!('color-theme' in localStorage) &&
				window.matchMedia('(prefers-color-scheme: dark)').matches)
		) {
			themeToggleLightIcon.classList.remove('hidden');
		} else {
			themeToggleDarkIcon.classList.remove('hidden');
		}

		// 创建暗黑模式切换事件
		const event = new Event('dark-mode');

		// 为主题切换按钮添加点击事件监听器
		themeToggleBtn.addEventListener('click', () =>  {
			// 切换图标显示
			themeToggleDarkIcon.classList.toggle('hidden');
			themeToggleLightIcon.classList.toggle('hidden');

			// 如果之前通过本地存储设置过
			if (localStorage.getItem('color-theme')) {
				if (localStorage.getItem('color-theme') === 'light') {
					document.documentElement.classList.add('dark');
					localStorage.setItem('color-theme', 'dark');
				} else {
					document.documentElement.classList.remove('dark');
					localStorage.setItem('color-theme', 'light');
				}

				// 如果之前未通过本地存储设置
			} else {
const isDarkMode = document.documentElement.classList.contains('dark');
if (isDarkMode) {
					document.documentElement.classList.remove('dark');
					localStorage.setItem('color-theme', 'light');
				} else {
					document.documentElement.classList.add('dark');
					localStorage.setItem('color-theme', 'dark');
				}
			}

			// 触发暗黑模式事件
			document.dispatchEvent(event);
		});

		// 确保Flowbite的tooltip正常工作
		// 如果Flowbite已经加载，它会自动处理带有data-tooltip-target属性的元素
		// 但为了确保tooltip正常工作，我们可以手动检查
		if (tooltip && typeof (window as any).Flowbite !== 'undefined') {
			// Flowbite已加载，tooltip应该正常工作
			console.log('Flowbite已加载，tooltip应该正常工作');
		} else if (tooltip) {
			// 如果Flowbite尚未加载，我们可以添加基本的tooltip功能
			themeToggleBtn.addEventListener('mouseenter', () =>  {
				tooltip.classList.remove('invisible', 'opacity-0');
				tooltip.classList.add('opacity-100');
				
				// 简单定位tooltip
				const btnRect = themeToggleBtn.getBoundingClientRect();
				tooltip.style.left = `${btnRect.left + (btnRect.width / 2) - (tooltip.offsetWidth / 2)}px`;
				tooltip.style.top = `${btnRect.bottom + 10}px`;
			});
			
			themeToggleBtn.addEventListener('mouseleave', () =>  {
				tooltip.classList.add('invisible', 'opacity-0');
				tooltip.classList.remove('opacity-100');
			});
		}
	});
</script>
